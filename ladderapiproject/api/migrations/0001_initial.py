# Generated by Django 4.1.7 on 2023-02-26 07:08

import api.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_format', models.TextField(choices=[('FFA', 'ffa'), ('2V2', '2v2'), ('3V3', '3v3'), ('4V4', '4v4'), ('6V6', '6v6')], default='2V2')),
                ('event_race_amount', models.IntegerField(validators=[api.models.num_races_validator])),
                ('event_date', models.DateTimeField()),
                ('event_table_image', models.URLField()),
                ('tier', models.IntegerField()),
                ('subs', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_date', models.DateTimeField()),
                ('match_table_image', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_name', models.TextField(unique=True)),
                ('permission_value', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discord_id', models.IntegerField(unique=True)),
                ('player_name', models.TextField(unique=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('division', models.TextField(choices=[('IRON', 'iron'), ('BRONZE', 'bronze'), ('SILVER', 'silver'), ('GOLD', 'gold'), ('PLATINUM', 'platinum')], default='IRON')),
                ('strikes', models.IntegerField(default=0)),
                ('name_change_date', models.DateTimeField()),
                ('friend_code', models.TextField(validators=[api.models.fc_validator])),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.TextField(unique=True)),
                ('team_tag', models.TextField(unique=True)),
                ('division', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'division cannot be less than 1')])),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament_name', models.TextField(unique=True)),
                ('tournament_date', models.DateTimeField()),
                ('tournament_type', models.TextField(choices=[('WAR', 'war'), ('MOGI', 'mogi')], default='MOGI')),
            ],
        ),
        migrations.CreateModel(
            name='ApiKeys',
            fields=[
                ('player_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.player')),
                ('api_key', models.TextField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventPlayerStats',
            fields=[
                ('player_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.player')),
                ('base_mmr', models.IntegerField(default=0)),
                ('current_mmr', models.IntegerField(default=0)),
                ('peak_mmr', models.IntegerField(default=0)),
                ('lowest_mmr', models.IntegerField(default=0)),
                ('max_gain_mmr', models.IntegerField(default=0)),
                ('max_loss_mmr', models.IntegerField(default=0)),
                ('diff_last_ten_mmr', models.IntegerField(default=0)),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('top_score', models.IntegerField(default=0)),
                ('total_events', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='MogiTournamentWinners',
            fields=[
                ('tournament_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='TeamStats',
            fields=[
                ('team_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.team')),
                ('base_mmr', models.IntegerField(default=0)),
                ('current_mmr', models.IntegerField(default=0)),
                ('peak_mmr', models.IntegerField(default=0)),
                ('lowest_mmr', models.IntegerField(default=0)),
                ('max_gain_mmr', models.IntegerField(default=0)),
                ('max_loss_mmr', models.IntegerField(default=0)),
                ('diff_last_ten_mmr', models.IntegerField(default=0)),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('top_score', models.IntegerField(default=0)),
                ('total_matches', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.permissions')),
                ('player_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.player')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='team_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.team'),
        ),
        migrations.CreateModel(
            name='MatchTeamData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('win', models.BooleanField()),
                ('team_score', models.IntegerField()),
                ('penalty', models.IntegerField()),
                ('race_amount', models.IntegerField()),
                ('match_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.match')),
                ('team_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.team')),
            ],
        ),
        migrations.CreateModel(
            name='MatchPlayerData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_score', models.IntegerField()),
                ('races_played', models.IntegerField(validators=[api.models.num_races_validator])),
                ('subbed_in', models.IntegerField(validators=[api.models.num_races_validator])),
                ('subbed_out', models.IntegerField(validators=[api.models.num_races_validator])),
                ('match_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.match')),
                ('player_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.player')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='team_one',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_one', to='api.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_two',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_two', to='api.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='tournament_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tournament'),
        ),
        migrations.CreateModel(
            name='EventPlayerData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.TextField()),
                ('ranking', models.IntegerField(null=True)),
                ('multiplier', models.FloatField()),
                ('score', models.IntegerField()),
                ('races_played', models.IntegerField(validators=[api.models.num_races_validator])),
                ('subbed_in', models.IntegerField(validators=[api.models.num_races_validator])),
                ('subbed_out', models.IntegerField(validators=[api.models.num_races_validator])),
                ('before_event_mmr', models.PositiveIntegerField()),
                ('after_event_mmr', models.PositiveIntegerField()),
                ('before_division', models.TextField(choices=[('IRON', 'iron'), ('BRONZE', 'bronze'), ('SILVER', 'silver'), ('GOLD', 'gold'), ('PLATINUM', 'platinum')])),
                ('after_division', models.TextField(choices=[('IRON', 'iron'), ('BRONZE', 'bronze'), ('SILVER', 'silver'), ('GOLD', 'gold'), ('PLATINUM', 'platinum')])),
                ('win', models.BooleanField()),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.event')),
                ('player_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.player')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='tournament_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tournament'),
        ),
        migrations.CreateModel(
            name='WarTournamentWinners',
            fields=[
                ('tournament_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.tournament')),
                ('final_match_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.match')),
            ],
        ),
        migrations.AddConstraint(
            model_name='playerpermissions',
            constraint=models.UniqueConstraint(fields=('player_id', 'permission_id'), name='unique_player_permission'),
        ),
        migrations.AddField(
            model_name='mogitournamentwinners',
            name='final_event_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.event'),
        ),
        migrations.AddConstraint(
            model_name='matchplayerdata',
            constraint=models.UniqueConstraint(fields=('player_id', 'match_id'), name='unique_match_player'),
        ),
        migrations.AddConstraint(
            model_name='eventplayerdata',
            constraint=models.UniqueConstraint(fields=('event_id', 'player_id'), name='unique_event_player'),
        ),
    ]
